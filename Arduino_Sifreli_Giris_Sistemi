#include Wire.h
#include LiquidCrystal_I2C.h
#include Keypad.h

 LCD tanımı
LiquidCrystal_I2C lcd(0x27, 16, 2);

 Şifre tanımı
const String correctPassword = 040602BC;
String inputPassword = ;

 4x4 Keypad tanımı
const byte ROWS = 4;  Satır
const byte COLS = 4;  Sütun

char keys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'','0','#','D'}
};

 Tuş takımı bağlantıları R1,R2,R3,R4 → 9,8,7,6  C1,C2,C3,C4 → 5,4,3,2
byte rowPins[ROWS] = {9, 8, 7, 6};    R1-R4
byte colPins[COLS] = {5, 4, 3, 2};    C1-C4

Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);

void setup() {
  lcd.init();               LCD başlat
  lcd.backlight();          Arka ışık aç
  lcd.setCursor(0, 0);
  lcd.print(Sifre giriniz);
  lcd.setCursor(0, 1);
}

void loop() {
  char key = keypad.getKey();

  if (key) {
    if (key == '#') {
       Şifre girildiğinde kontrol et
      if (inputPassword == correctPassword) {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print(Giris Basarili);
      } else {
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print(Hatali Sifre!);
        delay(2000);
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print(Sifre giriniz);
      }
       Şifreyi sıfırla
      inputPassword = ;
      lcd.setCursor(0, 1);
    }
    else if (key == '') {
       '' ile şifreyi sil
      inputPassword = ;
      lcd.setCursor(0, 1);
      lcd.print(                );  satırı temizle
      lcd.setCursor(0, 1);
    }
    else {
       Maksimum 8 karakter girişi
      if (inputPassword.length()  8) {
        inputPassword += key;
        lcd.print();   Her tuşta yıldız göster
      }
    }
  }
}
